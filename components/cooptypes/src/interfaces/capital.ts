// Generated by eosio-abi2ts 1.2.2 - eosio::abi/1.2

export type IAsset = string
export type IName = string
export type IChecksum256 = string
export type IPublicKey = string
export type ISignature = string
export type ITimePointSec = string
export type IInt64 = number | string
export type IUint64 = number | string

export interface IAccumulate {
  coopname: IName
  amount: IAsset
}

export interface IAddauthor {
  coopname: IName
  administrator: IName
  idea_hash: IChecksum256
  author: IName
  shares: IUint64
}

export interface IAddcreator {
  coopname: IName
  administrator: IName
  result_hash: IChecksum256
  creator: IName
  used: IAsset
}

export interface IAuthor {
  id: IUint64
  idea_hash: IChecksum256
  username: IName
  added_at: ITimePointSec
  shares: IUint64
}

export interface IAuthorize {
  coopname: IName
  nft_id: IUint64
  decision: IDocument
}

export interface IClaim {
  id: IUint64
  hash: IChecksum256
  idea_hash: IChecksum256
  coopname: IName
  owner: IName
  type: IName
  status: IName
  created_at: ITimePointSec
  amount: IAsset
  statement: IDocument
  decision: IDocument
  act1: IDocument
  act2: IDocument
}

export interface IContribute {
  coopname: IName
  administrator: IName
  owner: IName
  idea_hash: IChecksum256
  nft_hash: IChecksum256
  amount: IAsset
}

export interface IContributor {
  id: IUint64
  account: IName
  share_balance: IAsset
  pending_rewards: IAsset
  intellectual_contributions: IAsset
  property_contributions: IAsset
  total_contributions: IAsset
  reward_per_share_last: IInt64
  withdrawed: IAsset
  queued_withdrawal: IAsset
}

export interface ICreateidea {
  hash: IChecksum256
  coopname: IName
  administrator: IName
  title: string
  description: string
}

export interface ICreateresult {
  coopname: IName
  administrator: IName
  idea_hash: IChecksum256
  result_hash: IChecksum256
}

export interface ICreator {
  id: IUint64
  result_hash: IChecksum256
  username: IName
  used: IAsset
}

export interface IDelcreator {
  coopname: IName
  administrator: IName
  result_hash: IChecksum256
  creator: IName
}

export interface IDocument {
  hash: IChecksum256
  public_key: IPublicKey
  signature: ISignature
  meta: string
}

export interface IGlobalState {
  coopname: IName
  program_id: IUint64
  total_shares: IAsset
  total_contributions: IAsset
  total_rewards_distributed: IAsset
  total_withdrawed: IAsset
  total_intellectual_contributions: IAsset
  total_property_contributions: IAsset
  accumulated_amount: IAsset
  cumulative_reward_per_share: IInt64
}

export interface IIdea {
  id: IUint64
  hash: IChecksum256
  coopname: IName
  administrator: IName
  status: IName
  title: string
  description: string
  authors_count: IUint64
  authors_shares: IUint64
  target: IAsset
  contributed: IAsset
  withdrawed: IAsset
  available: IAsset
  created_at: ITimePointSec
}

export interface IInit {
  coopname: IName
  initiator: IName
  program_id: IUint64
}

export interface IRefresh {
  coopname: IName
  username: IName
}

export interface IResult {
  id: IUint64
  hash: IChecksum256
  idea_hash: IChecksum256
  status: IName
  coopname: IName
  created_at: ITimePointSec
  expired_at: ITimePointSec
  authors_count: IUint64
  creators_count: IUint64
  creators_amount: IAsset
  creators_bonus: IAsset
  authors_bonus: IAsset
  generated_amount: IAsset
  participants_bonus: IAsset
  total_amount: IAsset
}

export interface ISetstatement {
  coopname: IName
  administrator: IName
  nft_hash: IChecksum256
  statement: IDocument
}

export interface IStart {
  coopname: IName
  administrator: IName
  result_hash: IChecksum256
}

export interface IWithdraw1 {
  coopname: IName
  username: IName
  amount: IAsset
}

export interface IWithdraw2 {
  coopname: IName
  username: IName
  amount: IAsset
}

export interface IWithdrawalClaim {
  id: IUint64
  account: IName
  amount: IAsset
  timestamp: IUint64
}
