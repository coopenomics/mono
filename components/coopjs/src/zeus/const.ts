/* eslint-disable */

export const AllTypesProps: Record<string,any> = {
	AddTrustedAccountInput:{

	},
	BankAccountDetailsInput:{

	},
	BankAccountInput:{
		details:"BankAccountDetailsInput"
	},
	CreateBankAccountInput:{
		data:"BankAccountInput"
	},
	CreateBranchInput:{

	},
	CreateProjectFreeDecisionInput:{

	},
	DateTime: `scalar.DateTime` as const,
	DeleteBranchInput:{

	},
	DeletePaymentMethodInput:{

	},
	DeleteTrustedAccountInput:{

	},
	EditBranchInput:{

	},
	ExtensionInput:{
		config:"JSON",
		created_at:"DateTime",
		updated_at:"DateTime"
	},
	GenerateDocumentOptionsInput:{

	},
	GetAccountInput:{

	},
	GetBranchesInput:{

	},
	GetExtensionsInput:{

	},
	GetPaymentMethodsInput:{

	},
	JSON: `scalar.JSON` as const,
	LangType: "enum" as const,
	Mutation:{
		addTrustedAccount:{
			data:"AddTrustedAccountInput"
		},
		createBankAccount:{
			data:"CreateBankAccountInput"
		},
		createBranch:{
			data:"CreateBranchInput"
		},
		createProjectOfFreeDecision:{
			data:"CreateProjectFreeDecisionInput"
		},
		deleteBranch:{
			data:"DeleteBranchInput"
		},
		deletePaymentMethod:{
			data:"DeletePaymentMethodInput"
		},
		deleteTrustedAccount:{
			data:"DeleteTrustedAccountInput"
		},
		editBranch:{
			data:"EditBranchInput"
		},
		generateProjectOfFreeDecision:{
			data:"ProjectFreeDecisionGenerateDocumentInput",
			options:"GenerateDocumentOptionsInput"
		},
		generateSelectBranchDocument:{
			data:"SelectBranchGenerateDocumentInput",
			options:"GenerateDocumentOptionsInput"
		},
		installExtension:{
			data:"ExtensionInput"
		},
		publishProjectOfFreeDecision:{
			data:"PublishProjectFreeDecisionInput"
		},
		selectBranch:{
			data:"SelectBranchInput"
		},
		uninstallExtension:{
			data:"UninstallExtensionInput"
		},
		updateBankAccount:{
			data:"UpdateBankAccountInput"
		},
		updateExtension:{
			data:"ExtensionInput"
		}
	},
	ProjectFreeDecisionGenerateDocumentInput:{

	},
	ProjectFreeDecisionSignedDocumentInput:{
		meta:"ProjectFreeDecisionSignedMetaDocumentInput"
	},
	ProjectFreeDecisionSignedMetaDocumentInput:{

	},
	PublishProjectFreeDecisionInput:{
		document:"ProjectFreeDecisionSignedDocumentInput"
	},
	Query:{
		getAccount:{
			data:"GetAccountInput"
		},
		getBranches:{
			data:"GetBranchesInput"
		},
		getExtensions:{
			data:"GetExtensionsInput"
		},
		getPaymentMethods:{
			data:"GetPaymentMethodsInput"
		}
	},
	SelectBranchGenerateDocumentInput:{

	},
	SelectBranchInput:{
		document:"SelectBranchSignedDocumentInput"
	},
	SelectBranchSignedDocumentInput:{
		meta:"SelectBranchSignedMetaDocumentInput"
	},
	SelectBranchSignedMetaDocumentInput:{

	},
	SystemStatus: "enum" as const,
	UninstallExtensionInput:{

	},
	UpdateBankAccountInput:{
		data:"BankAccountInput"
	},
	UserStatus: "enum" as const
}

export const ReturnTypes: Record<string,any> = {
	Account:{
		blockchain_account:"BlockchainAccount",
		mono_account:"MonoAccount",
		participant_account:"ParticipantAccount",
		user_account:"UserAccount",
		username:"String"
	},
	AccountResourceInfo:{
		available:"String",
		current_used:"String",
		last_usage_update_time:"String",
		max:"String",
		used:"String"
	},
	Authority:{
		accounts:"PermissionLevelWeight",
		keys:"KeyWeight",
		threshold:"Int",
		waits:"WaitWeight"
	},
	BankAccount:{
		account_number:"String",
		bank_name:"String",
		card_number:"String",
		currency:"String",
		details:"BankAccountDetails"
	},
	BankAccountDetails:{
		bik:"String",
		corr:"String",
		kpp:"String"
	},
	BankPaymentMethod:{
		created_at:"DateTime",
		data:"BankAccount",
		is_default:"Boolean",
		method_id:"String",
		method_type:"String",
		updated_at:"DateTime",
		username:"String"
	},
	BlockchainAccount:{
		account_name:"String",
		core_liquid_balance:"String",
		cpu_limit:"AccountResourceInfo",
		cpu_weight:"String",
		created:"String",
		head_block_num:"Int",
		head_block_time:"String",
		last_code_update:"String",
		net_limit:"AccountResourceInfo",
		net_weight:"String",
		permissions:"Permission",
		privileged:"Boolean",
		ram_quota:"Int",
		ram_usage:"Int",
		refund_request:"RefundRequest",
		rex_info:"String",
		self_delegated_bandwidth:"ResourceDelegationDTO",
		total_resources:"ResourceOverview",
		voter_info:"String"
	},
	BlockchainInfoDTO:{
		block_cpu_limit:"Int",
		block_net_limit:"Int",
		chain_id:"String",
		fork_db_head_block_id:"String",
		fork_db_head_block_num:"Int",
		head_block_id:"String",
		head_block_num:"Int",
		head_block_producer:"String",
		head_block_time:"String",
		last_irreversible_block_id:"String",
		last_irreversible_block_num:"Int",
		last_irreversible_block_time:"String",
		server_version:"String",
		server_version_string:"String",
		virtual_block_cpu_limit:"Int",
		virtual_block_net_limit:"Int"
	},
	Branch:{
		bank_account:"BankPaymentMethod",
		braname:"String",
		city:"String",
		coopname:"String",
		country:"String",
		details:"OrganizationDetails",
		email:"String",
		fact_address:"String",
		full_address:"String",
		full_name:"String",
		phone:"String",
		represented_by:"RepresentedBy",
		short_name:"String",
		trusted:"Individual",
		trustee:"Individual",
		type:"String"
	},
	CooperativeOperatorAccount:{
		announce:"String",
		coop_type:"String",
		created_at:"String",
		description:"String",
		document:"SignedBlockchainDocument",
		initial:"String",
		is_branched:"Boolean",
		is_cooperative:"Boolean",
		is_enrolled:"Boolean",
		meta:"String",
		minimum:"String",
		org_initial:"String",
		org_minimum:"String",
		org_registration:"String",
		parent_username:"String",
		referer:"String",
		registered_at:"String",
		registration:"String",
		registrator:"String",
		status:"String",
		storages:"String",
		type:"String",
		username:"String",
		verifications:"Verification"
	},
	CreatedProjectFreeDecision:{
		decision:"String",
		header:"String",
		id:"String",
		question:"String"
	},
	DateTime: `scalar.DateTime` as const,
	Extension:{
		available:"Boolean",
		config:"JSON",
		created_at:"DateTime",
		description:"String",
		enabled:"Boolean",
		image:"String",
		installed:"Boolean",
		instructions:"String",
		name:"String",
		readme:"String",
		schema:"JSON",
		tags:"String",
		title:"String",
		updated_at:"DateTime"
	},
	Individual:{
		birthdate:"String",
		email:"String",
		first_name:"String",
		full_address:"String",
		last_name:"String",
		middle_name:"String",
		passport:"Passport",
		phone:"String",
		username:"String"
	},
	JSON: `scalar.JSON` as const,
	KeyWeight:{
		key:"String",
		weight:"Int"
	},
	MetaDocument:{
		block_num:"Int",
		coopname:"String",
		created_at:"String",
		generator:"String",
		lang:"LangType",
		links:"String",
		registry_id:"Int",
		timezone:"String",
		title:"String",
		username:"String",
		version:"String"
	},
	MonoAccount:{
		email:"String",
		has_account:"Boolean",
		initial_order:"String",
		is_email_verified:"Boolean",
		is_registered:"Boolean",
		message:"String",
		public_key:"String",
		referer:"String",
		role:"String",
		status:"UserStatus",
		type:"String",
		username:"String"
	},
	Mutation:{
		addTrustedAccount:"Branch",
		createBankAccount:"PaymentMethod",
		createBranch:"Branch",
		createProjectOfFreeDecision:"CreatedProjectFreeDecision",
		deleteBranch:"Boolean",
		deletePaymentMethod:"Boolean",
		deleteTrustedAccount:"Branch",
		editBranch:"Branch",
		generateProjectOfFreeDecision:"ProjectFreeDecisionDocument",
		generateSelectBranchDocument:"SelectBranchDocument",
		installExtension:"Extension",
		publishProjectOfFreeDecision:"Boolean",
		selectBranch:"Boolean",
		uninstallExtension:"Boolean",
		updateBankAccount:"PaymentMethod",
		updateExtension:"Extension"
	},
	OrganizationDetails:{
		inn:"String",
		kpp:"String",
		ogrn:"String"
	},
	PaginationResult:{
		currentPage:"Int",
		items:"PaymentMethod",
		totalCount:"Int",
		totalPages:"Int"
	},
	ParticipantAccount:{
		braname:"String",
		created_at:"DateTime",
		has_vote:"Boolean",
		is_initial:"Boolean",
		is_minimum:"Boolean",
		last_min_pay:"DateTime",
		last_update:"DateTime",
		status:"String",
		type:"String",
		username:"String"
	},
	Passport:{
		code:"String",
		issued_at:"String",
		issued_by:"String",
		number:"Int",
		series:"Int"
	},
	PaymentMethod:{
		created_at:"DateTime",
		data:"PaymentMethodData",
		is_default:"Boolean",
		method_id:"String",
		method_type:"String",
		updated_at:"DateTime",
		username:"String"
	},
	PaymentMethodData:{
		"...on BankAccount":"BankAccount",
		"...on SbpAccount":"SbpAccount"
	},
	Permission:{
		parent:"String",
		perm_name:"String",
		required_auth:"Authority"
	},
	PermissionLevel:{
		actor:"String",
		permission:"String"
	},
	PermissionLevelWeight:{
		permission:"PermissionLevel",
		weight:"Int"
	},
	ProjectFreeDecisionDocument:{
		binary:"String",
		full_title:"String",
		hash:"String",
		html:"String",
		meta:"ProjectFreeDecisionMetaDocumentOutput"
	},
	ProjectFreeDecisionMetaDocumentOutput:{
		block_num:"Int",
		coopname:"String",
		created_at:"String",
		generator:"String",
		lang:"LangType",
		links:"String",
		project_id:"String",
		registry_id:"Int",
		timezone:"String",
		title:"String",
		username:"String",
		version:"String"
	},
	Query:{
		getAccount:"Account",
		getBranches:"Branch",
		getExtensions:"Extension",
		getPaymentMethods:"PaginationResult",
		getSystemInfo:"SystemInfo"
	},
	RefundRequest:{
		cpu_amount:"String",
		net_amount:"String",
		owner:"String",
		request_time:"String"
	},
	RepresentedBy:{
		based_on:"String",
		first_name:"String",
		last_name:"String",
		middle_name:"String",
		position:"String"
	},
	ResourceDelegationDTO:{
		cpu_weight:"String",
		from:"String",
		net_weight:"String",
		to:"String"
	},
	ResourceOverview:{
		cpu_weight:"String",
		net_weight:"String",
		owner:"String",
		ram_bytes:"Int"
	},
	SbpAccount:{
		phone:"String"
	},
	SelectBranchDocument:{
		binary:"String",
		full_title:"String",
		hash:"String",
		html:"String",
		meta:"SelectBranchMetaDocumentOutput"
	},
	SelectBranchMetaDocumentOutput:{
		block_num:"Int",
		braname:"String",
		coopname:"String",
		created_at:"String",
		generator:"String",
		lang:"LangType",
		links:"String",
		registry_id:"Int",
		timezone:"String",
		title:"String",
		username:"String",
		version:"String"
	},
	SignedBlockchainDocument:{
		hash:"String",
		meta:"String",
		public_key:"String",
		signature:"String"
	},
	SystemInfo:{
		blockchain_account:"BlockchainAccount",
		blockchain_info:"BlockchainInfoDTO",
		cooperator_account:"CooperativeOperatorAccount",
		coopname:"String",
		system_status:"SystemStatus"
	},
	UserAccount:{
		meta:"String",
		referer:"String",
		registered_at:"String",
		registrator:"String",
		status:"String",
		storages:"String",
		type:"String",
		username:"String",
		verifications:"Verification"
	},
	Verification:{
		created_at:"String",
		is_verified:"Boolean",
		last_update:"String",
		notice:"String",
		procedure:"String",
		verificator:"String"
	},
	WaitWeight:{
		wait_sec:"Int",
		weight:"Int"
	}
}

export const Ops = {
query: "Query" as const,
	mutation: "Mutation" as const
}