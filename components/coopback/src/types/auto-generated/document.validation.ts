/**
 * This file was automatically generated by joi-to-typescript
 * Do not modify this file manually
 */

export interface IGenerate {
  /**
   * Unknown Property
   */
  [x: string]: unknown;
  data: {
    block_num?: number;
    coopname: string;
    created_at?: string;
    generator?: string;
    lang?: 'ru';
    links?: string[];
    registry_id: number;
    timezone?: string;
    username: string;
    version?: string;
  };
  options?: {
    skip_save?: boolean;
  };
}

export interface IGetDocuments {
  /**
   * Unknown Property
   */
  [x: string]: unknown;
  filter: {
    /**
     * Unknown Property
     */
    [x: string]: unknown;
    receiver: string;
  };
  limit?: number;
  page?: number;
  sortBy?: string;
  type?: 'newsubmitted' | 'newresolved';
}

export interface RGenerate {
  body: {
    /**
     * Unknown Property
     */
    [x: string]: unknown;
    data: {
      block_num?: number;
      coopname: string;
      created_at?: string;
      generator?: string;
      lang?: 'ru';
      links?: string[];
      registry_id: number;
      timezone?: string;
      username: string;
      version?: string;
    };
    options?: {
      skip_save?: boolean;
    };
  };
}

export interface RGetDocuments {
  query?: {
    /**
     * Unknown Property
     */
    [x: string]: unknown;
    filter: {
      /**
       * Unknown Property
       */
      [x: string]: unknown;
      receiver: string;
    };
    limit?: number;
    page?: number;
    sortBy?: string;
    type?: 'newsubmitted' | 'newresolved';
  };
}

export interface RGetMyDocuments {
  query?: {
    username?: string;
  };
}
