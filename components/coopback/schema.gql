# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddTrustedAccountInput {
  """Имя аккаунта кооперативного участка"""
  braname: String!

  """Имя аккаунта кооператива"""
  coopname: String!

  """
  Имя аккаунта доверонного лица, который уполномачивается председателем кооперативного участка на совершение действий
  """
  trusted: String!
}

type BankAccount {
  """Номер банковского счета"""
  account_number: String!

  """Название банка"""
  bank_name: String!

  """Номер карты"""
  card_number: String

  """Валюта счета"""
  currency: String!

  """Детали счета"""
  details: BankAccountDetails!
}

type BankAccountDetails {
  """БИК банка"""
  bik: String!

  """Корреспондентский счет"""
  corr: String!

  """КПП банка"""
  kpp: String!
}

input BankAccountDetailsInput {
  """БИК банка"""
  bik: String!

  """Корреспондентский счет"""
  corr: String!

  """КПП банка"""
  kpp: String!
}

input BankAccountInput {
  """Номер банковского счета"""
  account_number: String!

  """Название банка"""
  bank_name: String!

  """Номер карты"""
  card_number: String

  """Валюта счета"""
  currency: String!

  """Детали счета"""
  details: BankAccountDetailsInput!
}

type BankPaymentMethod {
  """Дата создания"""
  created_at: DateTime!

  """Данные метода оплаты"""
  data: BankAccount!

  """Флаг основного метода платежа, который отображается в документах"""
  is_default: Boolean!

  """Идентификатор метода оплаты"""
  method_id: String!

  """Тип метода оплаты"""
  method_type: String!

  """Дата обновления"""
  updated_at: DateTime!

  """Имя пользователя, к которому привязан метод оплаты"""
  username: String!
}

"""Информация о состоянии блокчейна"""
type BlockchainInfoDTO {
  """Лимит CPU для блока"""
  block_cpu_limit: Int!

  """Лимит сети для блока"""
  block_net_limit: Int!

  """Идентификатор цепочки (chain ID)"""
  chain_id: String!

  """Номер первого блока"""
  first_block_num: Int

  """Идентификатор головного блока в форк базе данных"""
  fork_db_head_block_id: String

  """Номер головного блока в форк базе данных"""
  fork_db_head_block_num: Int

  """Идентификатор головного блока"""
  head_block_id: String!

  """Номер головного блока"""
  head_block_num: Int!

  """Прозводитель головного блока"""
  head_block_producer: String!

  """Время головного блока"""
  head_block_time: String!

  """Идентификатор последнего необратимого блока"""
  last_irreversible_block_id: String!

  """Номер последнего необратимого блока"""
  last_irreversible_block_num: Int!

  """Время последнего необратимого блока"""
  last_irreversible_block_time: String

  """Полная версия сервера в строковом виде"""
  server_full_version_string: String

  """Версия сервера"""
  server_version: String!

  """Строковое представление версии сервера"""
  server_version_string: String

  """Виртуальный лимит CPU для блока"""
  virtual_block_cpu_limit: Int!

  """Виртуальный лимит сети для блока"""
  virtual_block_net_limit: Int!
}

type Branch {
  """Банковский счёт"""
  bank_account: BankPaymentMethod!

  """Уникальное имя кооперативного участка"""
  braname: String!

  """Город"""
  city: String!

  """Имя аккаунта кооператива"""
  coopname: String!

  """Страна"""
  country: String!

  """Детали организации"""
  details: OrganizationDetails!

  """Email"""
  email: String!

  """Фактический адрес"""
  fact_address: String!

  """Полный адрес"""
  full_address: String!

  """Полное название организации"""
  full_name: String!

  """Телефон"""
  phone: String!

  """Представитель организации"""
  represented_by: RepresentedBy!

  """Краткое название организации"""
  short_name: String!

  """Доверенные аккаунты"""
  trusted: [Individual!]!

  """Председатель кооперативного участка"""
  trustee: Individual!

  """Тип организации"""
  type: String!
}

input CreateBankAccountInput {
  """Данные для банковского перевода"""
  data: BankAccountInput!

  """Флаг основного метода платежа, который отображается в документах"""
  is_default: Boolean!

  """Имя аккаунта пользователя"""
  username: String!
}

input CreateBranchInput {
  """
  Документ, на основании которого действует Уполномоченный (решение совета №СС-.. от ..)
  """
  based_on: String!

  """Имя аккаунта кооперативного участка"""
  braname: String!

  """Имя аккаунта кооператива"""
  coopname: String!

  """Электронная почта"""
  email: String!

  """Фактический адрес"""
  fact_address: String!

  """Полное имя организации кооперативного участка"""
  full_name: String!

  """Телефон"""
  phone: String!

  """Краткое имя организации кооперативного участка"""
  short_name: String!

  """Имя аккаунта уполномоченного (председателя) кооперативного участка"""
  trustee: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteBranchInput {
  """Имя аккаунта кооперативного участка"""
  braname: String!

  """Имя аккаунта кооператива"""
  coopname: String!
}

input DeletePaymentMethodInput {
  """Идентификатор метода оплаты"""
  method_id: String!

  """Имя пользователя, чей метод оплаты нужно удалить"""
  username: String!
}

input DeleteTrustedAccountInput {
  """Имя аккаунта кооперативного участка"""
  braname: String!

  """Имя аккаунта кооператива"""
  coopname: String!

  """
  Имя аккаунта доверонного лица, у которого отзывается право подписи за председателя кооперативного участка
  """
  trusted: String!
}

input EditBranchInput {
  """
  Документ, на основании которого действует Уполномоченный (решение совета №СС-.. от ..)
  """
  based_on: String!

  """Имя аккаунта кооперативного участка"""
  braname: String!

  """Имя аккаунта кооператива"""
  coopname: String!

  """Электронная почта"""
  email: String!

  """Фактический адрес"""
  fact_address: String!

  """Полное имя организации кооперативного участка"""
  full_name: String!

  """Телефон"""
  phone: String!

  """Краткое имя организации кооперативного участка"""
  short_name: String!

  """Имя аккаунта уполномоченного (председателя) кооперативного участка"""
  trustee: String!
}

type Extension {
  """Показывает, доступно ли расширение"""
  available: Boolean!

  """Настройки конфигурации для расширения"""
  config: JSON

  """Дата создания расширения"""
  created_at: DateTime!

  """Описание расширения"""
  description: String

  """Показывает, включено ли расширение"""
  enabled: Boolean!

  """Изображение для расширения"""
  image: String

  """Показывает, установлено ли расширение"""
  installed: Boolean!

  """Поле инструкция для установки"""
  instructions: String!

  """Уникальное имя расширения"""
  name: String!

  """Поле подробного текстового описания"""
  readme: String!

  """Схема настроек конфигурации для расширения"""
  schema: JSON

  """Массив тегов для расширения"""
  tags: [String!]!

  """Заголовок расширения"""
  title: String

  """Дата последнего обновления расширения"""
  updated_at: DateTime!
}

input ExtensionInput {
  """Configuration settings for the extension"""
  config: JSON!

  """Timestamp of when the extension was created"""
  created_at: DateTime

  """Indicates whether the extension is enabled"""
  enabled: Boolean!

  """Unique name of the extension"""
  name: String!

  """Timestamp of the last update to the extension"""
  updated_at: DateTime
}

input GetBranchesInput {
  """Фильтр по имени аккаунта кооперативного участка"""
  braname: String

  """Имя аккаунта кооператива"""
  coopname: String!
}

input GetExtensionsInput {
  """Фильтр включенных расширений"""
  enabled: Boolean

  """Фильтр установленных расширений"""
  installed: Boolean

  """Фильтр по имени"""
  name: String
}

input GetPaymentMethodsInput {
  """Количество элементов на странице"""
  limit: Int! = 10

  """Номер страницы"""
  page: Int! = 1

  """Ключ сортировки (например, "name")"""
  sortBy: String

  """Направление сортировки ("ASC" или "DESC")"""
  sortOrder: String! = "ASC"

  """Имя пользователя для фильтрации методов оплаты"""
  username: String
}

type Individual {
  """Дата рождения"""
  birthdate: String!

  """Email"""
  email: String!

  """Имя"""
  first_name: String!

  """Полный адрес"""
  full_address: String!

  """Фамилия"""
  last_name: String!

  """Отчество"""
  middle_name: String!

  """Данные паспорта"""
  passport: Passport

  """Телефон"""
  phone: String!

  """Имя аккаунта"""
  username: String!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  """Добавить доверенное лицо кооперативного участка"""
  addTrustedAccount(data: AddTrustedAccountInput!): Branch!

  """Добавить метод оплаты"""
  createBankAccount(data: CreateBankAccountInput!): PaymentMethod!

  """Создать кооперативный участок"""
  createBranch(data: CreateBranchInput!): Branch!

  """Удалить кооперативный участок"""
  deleteBranch(data: DeleteBranchInput!): Boolean!

  """Удалить метод оплаты"""
  deletePaymentMethod(data: DeletePaymentMethodInput!): Boolean!

  """Удалить доверенное лицо кооперативного участка"""
  deleteTrustedAccount(data: DeleteTrustedAccountInput!): Branch!

  """Изменить кооперативный участок"""
  editBranch(data: EditBranchInput!): Branch!

  """Установить расширение"""
  installExtension(data: ExtensionInput!): Extension!

  """Удалить расширение"""
  uninstallExtension(data: UninstallExtensionInput!): Boolean!

  """Обновить банковский счёт"""
  updateBankAccount(data: UpdateBankAccountInput!): PaymentMethod!

  """Обновить расширение"""
  updateExtension(data: ExtensionInput!): Extension!
}

type OrganizationDetails {
  """ИНН"""
  inn: String!

  """КПП"""
  kpp: String!

  """ОГРН"""
  ogrn: String!
}

type PaginationResult {
  """Текущая страница"""
  currentPage: Int!

  """Элементы текущей страницы"""
  items: [PaymentMethod!]!

  """Общее количество элементов"""
  totalCount: Int!

  """Общее количество страниц"""
  totalPages: Int!
}

type Passport {
  """Код подразделения"""
  code: String!

  """Дата выдачи"""
  issued_at: String!

  """Кем выдан"""
  issued_by: String!

  """Номер паспорта"""
  number: Int!

  """Серия паспорта"""
  series: Int!
}

type PaymentMethod {
  """Дата создания"""
  created_at: DateTime!

  """Данные метода оплаты"""
  data: PaymentMethodData!

  """Флаг основного метода платежа, который отображается в документах"""
  is_default: Boolean!

  """Идентификатор метода оплаты"""
  method_id: String!

  """Тип метода оплаты (например, sbp, bank_transfer)"""
  method_type: String!

  """Дата обновления"""
  updated_at: DateTime!

  """Имя пользователя, к которому привязан метод оплаты"""
  username: String!
}

union PaymentMethodData = BankAccount | SbpAccount

type Query {
  """Получить список кооперативных участков"""
  getBranches(data: GetBranchesInput!): [Branch!]!

  """Получить список расширений"""
  getExtensions(data: GetExtensionsInput): [Extension!]!

  """Получить сводную публичную информацию о системе"""
  getInfo: SystemInfo!

  """Получить список методов оплаты"""
  getPaymentMethods(data: GetPaymentMethodsInput): PaginationResult!
}

type RepresentedBy {
  """На основании чего действует"""
  based_on: String!

  """Имя"""
  first_name: String!

  """Фамилия"""
  last_name: String!

  """Отчество"""
  middle_name: String!

  """Должность"""
  position: String!
}

type SbpAccount {
  """Мобильный телефон получателя"""
  phone: String!
}

type SystemInfo {
  """Набор данных с информацией о состоянии блокчейна"""
  blockchain: BlockchainInfoDTO!

  """Имя аккаунта кооператива"""
  coopname: String!
}

input UninstallExtensionInput {
  """Фильтр по имени"""
  name: String!
}

input UpdateBankAccountInput {
  """Данные банковского счёта"""
  data: BankAccountInput!

  """Флаг основного метода платежа, который отображается в документах"""
  is_default: Boolean!

  """Идентификатор платежного метода"""
  method_id: String!

  """Имя аккаунта пользователя"""
  username: String!
}